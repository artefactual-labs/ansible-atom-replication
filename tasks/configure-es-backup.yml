---
- name: "install python-httplib2"
  become: "yes"
  package:
    name: "python-httplib2"
    state: "present"

- name: "check elasticsearch version (edit)"
  uri:
    url: "{{ atom_replication_edit_es_base_url }}:{{ atom_replication_es_port }}"
    return_content: "yes"
    use_proxy: false
  register: "es_response_edit"
  when: inventory_hostname == atom_replication_edit_es_host|string

- name: "check elasticsearch version (read-only)"
  uri:
    url: "{{ atom_replication_ro_es_base_url }}:{{ atom_replication_es_port }}"
    return_content: "yes"
    use_proxy: false
  register: "es_response_ro"
  when: inventory_hostname == atom_replication_ro_es_host|string

- name: "Set fact Elasticsearch version, base_url and host (edit)"
  set_fact:
    es_version: "{{ es_response_edit.json.version.number }}"
    es_host: "{{ atom_replication_edit_es_base_url_host }}"
    es_base_url: "{{ atom_replication_edit_es_base_url }}"
  when: es_response_edit is defined and es_response_edit.json is defined

- name: "Set fact Elasticsearch version and host (read-only)"
  set_fact:
    es_version: "{{ es_response_ro.json.version.number }}"
    es_host: "{{ atom_replication_ro_es_base_url_host }}"
    es_base_url: "{{ atom_replication_ro_es_base_url }}"
  when: es_response_ro is defined and es_response_ro.json is defined

- fail:
    msg: "ES version <1.0. Repos/Snapshots not supported"
  when: es_version is version_compare('1.0', '<')

- debug:
    msg: "ES version >1.6 . path.repo required. version: {{ es_version }}, host: {{ es_host }}, base_url: {{ es_base_url }}"
  when: es_version is version_compare('1.6', '>=')

- name: "add path.repo var to elasticsearch.yml"
  become: "yes"
  lineinfile:
    dest: "/etc/elasticsearch/elasticsearch.yml"
    regexp: "^path.repo:"
    line: "path.repo: [\"{{ atom_replication_es_backup_repo_path }}\"]"
    backup: "yes"
    owner: "elasticsearch"
    group: "elasticsearch"
  when: es_version is version_compare('1.6', '>=')
  notify: "restart elasticsearch"

- name: "Remove directory to hold repository"
  become: "yes"
  file:
    path: "{{ atom_replication_es_backup_repo_path }}"
    state: "absent"

- name: "create directory to hold repository"
  become: "yes"
  file:
    path: "{{ atom_replication_es_backup_repo_path }}"
    state: "directory"
    mode: "0775"
    owner: "{{ atom_replication_snapshot_es_user }}"
    group: "{{ atom_replication_snapshot_es_group }}"

- name: "flush to restart elasticsearch if there were config changes"
  meta: "flush_handlers"

- name: "wait until elasticsearch port is open (to avoid errors when it was restarted)"
  wait_for:
    host: "{{ es_host }}"
    port: "{{ atom_replication_es_port }}"

- name: "add repository to elasticsearch"
  uri:
    url: "{{ es_base_url }}:{{ atom_replication_es_portÂ }}/_snapshot/{{ atom_replication_es_repo_name }}"
    method: "PUT"
    body:
      type: "fs"
      settings:
        location: "{{ atom_replication_es_backup_repo_path }}"
    body_format: "json"
    use_proxy: false

- name: "restart elasticsearch"
  become: "yes"
  service:
    name: "elasticsearch"
    state: "restarted"

- name: "wait until elasticsearch port is open (to avoid errors when it was restarted)"
  wait_for:
    host: "{{ es_host }}"
    port: "{{ atom_replication_es_port }}"
