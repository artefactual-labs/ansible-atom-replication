---
# defaults file for atom-replication-role

# Servers (Ansible host field in Ansible inventory)
atom_replication_edit_atom_host: "{{ atom_replication_edit_atom_host }}"
atom_replication_ro_atom_host: "{{ atom_replication_ro_atom_host }}"
atom_replication_edit_mysql_host: "{{ atom_replication_edit_mysql_host }}"
atom_replication_ro_mysql_host: "{{ atom_replication_ro_mysql_host }}"
atom_replication_edit_es_host: "{{ atom_replication_edit_es_host }}"
atom_replication_ro_es_host: "{{ atom_replication_ro_es_host }}"


# Ansible ssh IP addresses/hostnames (Ansible ssh host in Ansible inventory)
atom_replication_edit_atom_ansible_user: "{{ atom_replication_edit_atom_ansible_user }}"
atom_replication_ro_atom_ansible_user: "{{ atom_replication_ro_atom_ansible_user }}"
atom_replication_ro_es_ansible_user: "{{ atom_replication_ro_es_ansible_user }}"
atom_replication_edit_es_ansible_user: "{{ atom_replication_edit_es_ansible_user }}"
atom_replication_ro_mysql_ansible_user: "{{ atom_replication_ro_mysql_ansible_user }}"
atom_replication_edit_mysql_ansible_user: "{{ atom_replication_edit_mysql_ansible_user }}"

# Ansible ssh usernames (Ansible ssh user in Ansible inventory)
atom_replication_edit_atom_ansible_host: "{{ atom_replication_edit_atom_ansible_host }}"
atom_replication_ro_atom_ansible_host: "{{ atom_replication_ro_atom_ansible_host }}"
atom_replication_ro_es_ansible_host: "{{ atom_replication_ro_es_ansible_host }}"
atom_replication_edit_es_ansible_host: "{{ atom_replication_edit_es_ansible_host }}"
atom_replication_ro_mysql_ansible_host: "{{ atom_replication_ro_mysql_ansible_host }}"
atom_replication_edit_mysql_ansible_host: "{{ atom_replication_edit_mysql_ansible_host }}"

# Needed to rsync uploads and downloads from AtoM edit host to AtoM read-only host
atom_replication_edit_ssh_pubkey_file: "{{ atom_replication_edit_ssh_pubkey_file }}"

# Temporary Directories

atom_replication_edit_mysql_snapshots_dir: "{{ atom_replication_edit_mysql_snapshots_dir }}"
atom_replication_ro_mysql_snapshots_dir: "{{ atom_replication_ro_mysql_snapshots_dir }}"

atom_replication_edit_es_snapshots_dir: "{{ atom_replication_edit_es_snapshots_dir }}"
atom_replication_ro_es_snapshots_dir: "{{ atom_replication_ro_es_snapshots_dir }}"

atom_replication_ansible_host_snapshots_dir: "{{ atom_replication_ansible_host_snapshots_dir }}"

# Install role in remote server (Optional).
# Use "install-replication" tag to deploy the replication script in the remote server
atom_replication_ansible_remote_server: "{{ atom_replication_ansible_remote_server }}"
atom_replication_ansible_remote_user: "{{ atom_replication_ansible_remote_user }}"
atom_replication_ansible_remote_path: "{{ atom_replication_ansible_remote_path }}"

atom_replication_ansible_remote_cron_enabled: "{{ atom_replication_ansible_remote_cron_enabled }}"
atom_replication_ansible_remote_cron_minute: "{{ atom_replication_ansible_remote_cron_minute }}"
atom_replication_ansible_remote_cron_hour: "{{ atom_replication_ansible_remote_cron_hour }}"
atom_replication_ansible_remote_cron_day: "{{ atom_replication_ansible_remote_cron_day }}"
atom_replication_ansible_remote_cron_month: "{{ atom_replication_ansible_remote_cron_month }}"
atom_replication_ansible_remote_cron_weekday: "{{ atom_replication_ansible_remote_cron_weekday }}"

# Elasticsearch settings:

# Assuming all ES servers are going to use the same port
atom_replication_es_port: "{{ atom_replication_es_port }}"

atom_replication_snapshot_user: "{{ atom_replication_snapshot_user }}"
atom_replication_snapshot_group: "{{ atom_replication_snapshot_group }}"

atom_replication_edit_es_index: "{{ atom_replication_edit_es_index }}"
atom_replication_ro_es_index: "{{ atom_replication_ro_es_index }}"

atom_replication_es_repo_name: "{{ atom_replication_es_repo_name }}"
atom_replication_es_snapshot_name: "{{ atom_replication_es_snapshot_name }}"

atom_replication_es_backup_repo_path: "{{ atom_replication_es_backup_repo_path }}"

# MySQL settings
atom_replication_edit_db_name: "{{ atom_replication_edit_db_name }}"
atom_replication_ro_db_name: "{{ atom_replication_ro_db_name }}"

atom_replication_ro_backup_tables: "{{ atom_replication_ro_backup_tables }}"
# atom_replication_ro_backup_tables:
#   - user
#   - clipboard_save
#   - clipboard_save_item

# AtoM source paths
atom_replication_edit_path: "{{ atom_replication_edit_path }}"
atom_replication_ro_path: "{{ atom_replication_ro_path }}"

# AtoM downloads and uploads paths
# NOTE: Ensure all paths ends in "/"
atom_replication_edit_downloads_path: "{{ atom_replication_edit_downloads_path }}"
atom_replication_ro_downloads_path: "{{ atom_replication_ro_downloads_path }}"
atom_replication_edit_uploads_path: "{{ atom_replication_edit_uploads_path }}"
atom_replication_ro_uploads_path: "{{ atom_replication_ro_uploads_path }}"

# AtoM synchronize uploads and downloads directories with rsync (Optional)
atom_replication_synchronize_uploads_dir: "{{ atom_replication_synchronize_uploads_dir }}"
atom_replication_synchronize_downloads_dir: "{{ atom_replication_synchronize_downloads_dir }}"

# AtoM worker, memcache and php-fpm service names
atom_replication_edit_worker_service: "{{ atom_replication_edit_worker_service }}"
atom_replication_ro_worker_service: "{{ atom_replication_ro_worker_service }}"

atom_replication_edit_php_fpm_service: "{{ atom_replication_edit_php_fpm_service }}"
atom_replication_ro_php_fpm_service: "{{ atom_replication_ro_php_fpm_service }}"

atom_replication_edit_memcache_service: "{{ atom_replication_edit_memcache_service }}"
atom_replication_ro_memcache_service: "{{ atom_replication_ro_memcache_service }}"

# Nginx users
atom_replication_edit_nginx_user: "{{ atom_replication_edit_nginx_user }}"
atom_replication_ro_nginx_user: "{{ atom_replication_ro_nginx_user }}"

# Synchronize baseurl (Optional)
# Check running: "select value from setting_i18n where id='124';" in both databases
atom_replication_synchronize_baseurl: "{{ atom_replication_synchronize_baseurl }}"
atom_replication_edit_dnsname: "{{ atom_replication_edit_dnsname }}"
atom_replication_ro_dnsname: "{{ atom_replication_ro_dnsname }}"

# Delete read-only db clipboard save items that reference slugs which no longer exist (Optional)
atom_replication_clipboard_delete_obsolete_items: "{{ atom_replication_clipboard_delete_obsolete_items }}"
